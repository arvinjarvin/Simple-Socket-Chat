{"version":3,"sources":["reportWebVitals.js","components/Header/Nav/Navbar.jsx","components/Header/Header.jsx","domain/error/Error.jsx","domain/root/Message.jsx","domain/root/Homepage.jsx","domain/root/App.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Navbar","className","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Header","Error","props","location","pathname","Message","data","useState","style","backgroundColor","width","height","borderRadius","fontSize","userSelect","cursor","username","substr","toUpperCase","d","now","Date","date","getDate","getMonth","getFullYear","toLocaleTimeString","toLocaleDateString","getFormattedDateString","message","Homepage","typingTimer","chats","setChats","msg","setMsg","setUsername","setUsers","typingUsers","setTypingUsers","typing","setTyping","socket","useRef","useEffect","user","randomUsername","current","io","query","on","c","u","t","filter","x","length","console","log","disconnect","alphabet","i","Math","floor","random","overflowY","map","onSubmit","e","preventDefault","emit","onChange","target","value","placeholder","onKeyDown","clearTimeout","onKeyUp","setTimeout","join","App","Fragment","exact","path","component","ReactDOM","render","basename","test","window","document","getElementById"],"mappings":"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","file":"static/js/main.f132ca77.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar()\r\n{\r\n    return (\r\n        <nav className={\"app-navbar navbar navbar-transparent navbar-expand-lg navbar-light shadow p-2\"}>\r\n            <div className={\"container pt-2\"}>\r\n                <div className={\"navbar-brand\"}>\r\n                    <Link to={\"/\"}>\r\n                        <h4 className={\"text-white\"}>Socket.io</h4>\r\n                    </Link>\r\n                </div>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navContent\" aria-controls=\"navContent\" aria-expanded=\"false\" aria-label=\"Nav\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navContent\">\r\n                    <div className={\"navbar-nav mr-auto\"}>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","import React from 'react';\r\nimport Navbar from \"./Nav/Navbar\";\r\n\r\nexport default function Header()\r\n{\r\n    return (\r\n        <header className={\"mb-4\"}>\r\n            <Navbar />\r\n        </header>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default function Error(props)\r\n{\r\n    let { location } = props;\r\n\r\n    return (\r\n        <div className={\"container\"}>\r\n            <h2>Error!</h2>\r\n            <hr/>\r\n            <h4>Sorry, we can't find what you're looking for!</h4>\r\n            <p>At path \"{location.pathname}\"</p>\r\n        </div>\r\n    )\r\n}","import React, {useEffect, useState} from 'react';\r\n\r\nexport default function Message(props)\r\n{\r\n    let { data } = props;\r\n\r\n    let getFormattedDateString = (d) =>\r\n    {\r\n        let now = new Date();\r\n        let date = new Date(d);\r\n\r\n        if(date.getDate() === now.getDate() &&\r\n            date.getMonth() === now.getMonth() &&\r\n            date.getFullYear() === now.getFullYear()) return `Today at ${date.toLocaleTimeString()}`\r\n        else if(date.getDate() === now.getDate()-1 &&\r\n        date.getMonth() === now.getMonth() &&\r\n        date.getFullYear() === now.getFullYear())\r\n            return `Yesterday at ${date.toLocaleTimeString()}`;\r\n        else return `${date.toLocaleDateString()}`\r\n    }\r\n\r\n    let [name, setName] = useState(\"\");\r\n\r\n    return (\r\n        <div className={\"d-flex flex-row message\"}>\r\n            <div className={\"mr-3\"}>\r\n                <div style={{\r\n                    backgroundColor: 'grey',\r\n                    width: '50px',\r\n                    height: '50px',\r\n                    borderRadius: 50,\r\n                    fontSize: 20,\r\n                    userSelect: 'none',\r\n                    cursor: 'pointer'\r\n                }} className={\"d-flex justify-content-center align-items-center text-white\"}>{data.username.substr(0, 2).toUpperCase()}</div>\r\n            </div>\r\n            <div className={\"d-flex flex-column\"}>\r\n                <div className={\"d-flex flex-row\"}>\r\n                    <small className={\"font-weight-bold\"}>{data.username}</small>&nbsp;\r\n                    <small>{getFormattedDateString(data.date)}</small>\r\n                </div>\r\n                <div>\r\n                    <p>{data.message}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useState, useEffect, useRef} from 'react';\r\nimport io from 'socket.io-client';\r\nimport Message from \"./Message\";\r\n\r\nexport default function Homepage()\r\n{\r\n    let [chats, setChats] = useState([]);\r\n    let [msg, setMsg] = useState(\"\");\r\n    let [username, setUsername] = useState(\"\");\r\n    let [users, setUsers] = useState([]);\r\n    let [typingUsers, setTypingUsers] = useState([])\r\n    let [typing, setTyping] = useState(false);\r\n    let socket = useRef();\r\n    let typingTimer;\r\n    let doneTypingInterval = 5000;\r\n\r\n    useEffect(() =>\r\n    {\r\n        let user = randomUsername();\r\n        setUsername(user);\r\n        socket.current = io('https://simple-socket-io.herokuapp.com', {\r\n            query: {\r\n                username: user\r\n            }\r\n        });\r\n        socket.current.on('chat', c =>\r\n        {\r\n            setChats((chats) => [c, ...chats])\r\n        })\r\n        socket.current.on('users', u =>\r\n        {\r\n            setUsers(u);\r\n        })\r\n        socket.current.on('typing', t =>\r\n        {\r\n            let alreadyTyping = typingUsers.filter(x => x.username === t.username);\r\n            if(alreadyTyping.length>0) return;\r\n            console.log(`${t.username} started typing.`)\r\n            setTypingUsers((typingUsers) => [...typingUsers, t])\r\n        })\r\n\r\n        socket.current.on('stopped_typing', t =>\r\n        {\r\n            console.log(`${t.username} stopped typing.`)\r\n            setTypingUsers(typingUsers.filter(x => x.username !== t.username))\r\n        })\r\n\r\n        return () =>\r\n        {\r\n            socket.current.disconnect();\r\n        }\r\n    }, [])\r\n\r\n\r\n\r\n    let keyDownEvent = () =>\r\n    {\r\n        clearTimeout(typingTimer);\r\n        if(!typing)\r\n        {\r\n            setTyping(true);\r\n            socket.current.emit('typing');\r\n        }\r\n    }\r\n\r\n    let keyUpEvent = () =>\r\n    {\r\n        clearTimeout(typingTimer);\r\n        typingTimer = setTimeout(() => {\r\n            socket.current.emit('stopped_typing');\r\n            setTyping(false)\r\n        }, doneTypingInterval)\r\n    }\r\n\r\n    let chat = (e) =>\r\n    {\r\n        e.preventDefault()\r\n        socket.current.emit('chat', {\r\n            message: msg,\r\n            username: username\r\n        })\r\n        setMsg(\"\");\r\n    }\r\n\r\n    let onChange = (e) =>\r\n    {\r\n        setMsg(e.target.value)\r\n    }\r\n\r\n    let getFormattedTypingString = () =>\r\n    {\r\n        if(typingUsers.length>3)\r\n            return `Several users are typing.`;\r\n        else if (typingUsers.length>1)\r\n            return `${typingUsers.map(t => t.username).join(' and ')} are typing.`;\r\n        else return `${typingUsers.map(t => t.username)} is typing.`\r\n    }\r\n\r\n    let randomUsername = () =>\r\n    {\r\n        let alphabet = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNQRSTUVWXYZ12345790\";\r\n        let length = 10;\r\n        let u = \"\";\r\n\r\n        for(let i = 0; i<length; i++)\r\n        {\r\n            if(u === \"\")\r\n                u=alphabet[Math.floor(Math.random() * alphabet.length)]\r\n            else u+=alphabet[Math.floor(Math.random() * alphabet.length)]\r\n        }\r\n        return u;\r\n    }\r\n\r\n    return (\r\n        <div className={\"container d-flex flex-column\"} >\r\n            <div>\r\n                <div style={{\r\n                    height: '75vh',\r\n                    overflowY: 'scroll'\r\n                }} className={\"d-flex flex-column-reverse\"}>\r\n                    {\r\n                        chats.map(c => <Message key={c.id} data={c} />)\r\n                    }\r\n                </div>\r\n                <form onSubmit={chat} style={{\r\n                    width: '100%',\r\n                    height: 70\r\n                }} className={\"form-control d-flex align-items-center\"}>\r\n                    <input className={\"p-3\"}\r\n                           type={\"text\"}\r\n                           onChange={onChange}\r\n                           placeholder={\"Type message and hit enter to send\"} value={msg}\r\n                           onKeyDown={keyDownEvent}\r\n                           onKeyUp={keyUpEvent} id={\"msg\"} style={{\r\n                        width: '100%',\r\n                        height: 40\r\n                    }} />\r\n                </form>\r\n\r\n            </div>\r\n            {typingUsers.length>0 ?\r\n                <div>\r\n                    <small className={\"font-weight-bold\"}>{getFormattedTypingString()}</small>\r\n                </div>: '' }\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Header from \"../../components/Header/Header\";\r\nimport Error from \"../error/Error\";\r\nimport Homepage from \"./Homepage\";\r\n\r\nexport default function App()\r\n{\r\n    return (\r\n        <React.Fragment>\r\n                <Header />\r\n                <Switch>\r\n                    <Route exact path={\"/\"} component={Homepage} />\r\n                    <Route component={Error} />\r\n                </Switch>\r\n        </React.Fragment>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/app.scss';\nimport reportWebVitals from './reportWebVitals';\nimport App from \"./domain/root/App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router basename={/github.io/.test(window.location) ? '/simple-socket-chat' : '/'}>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}